@{
    ViewBag.Title = "Index";
}

@* <h2>Index</h2> *@

<div style="margin-top: 46px" id="calender"></div>

<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"><span id="eventTitle"></span></h4>
            </div>
            <div class="modal-body">
                <button id="btnDelete" class="btn btn-default btn-sm pull-right">
                    <span class="glyphicon glyphicon-remove"></span> Remove
                </button>
                <button id="btnEdit" class="btn btn-default btn-sm pull-right" style="margin-right:5px;">
                    <span class="glyphicon glyphicon-pencil"></span> Edit
                </button>
                <p id="pDetails"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div id="myModalSave" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Save Event</h4>
            </div>
            <div class="modal-body">
                <form class="form-horizontal">
                    <input type="hidden" id="hdEventID" value="0" />
                    <div class="form-group">
                        <label>Subject</label>
                        <input type="text" id="txtSubject" class="form-control" />
                    </div>
                    @* <div class="form-group">
                    <label>Start</label>
                    <div class="input-group date" id="dtp1">
                    <input type="text" id="txtStart" class="form-control" />
                    <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                    </div>
                    </div> *@
                    <div class="form-group">
                        <label for="txtStart">Start</label>
                        <div class="input-group date" id="dtp1">
                            <input type="text" id="txtStart" class="form-control datetimepicker-input" data-target="#dtp1" />
                            <div class="input-group-append" data-target="#dtp1" data-toggle="datetimepicker">
                                <span class="input-group-text">
                                    <i class="fa fa-calendar"></i>
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="checkbox">
                            <label><input type="checkbox" id="chkIsFullDay" checked="checked" />  Is Full Day event</label>
                        </div>
                    </div>
                    @* <div class="form-group" id="divEndDate">
                    <label>End</label>
                    <div class="input-group date" id="dtp2">
                    <input type="text" id="txtEnd" class="form-control" />
                    <span class="input-group-addon">
                    <span class="f glyphicon-calendar"></span>
                    </span>
                    </div>
                    </div> *@
                    <div class="form-group" id="divEndDate">
                        <label for="txtEnd">End</label>
                        <div class="input-group date" id="dtp2">
                            <input type="text" id="txtEnd" class="form-control datetimepicker-input" data-target="#dtp2" />
                            <div class="input-group-append" data-target="#dtp2" data-toggle="datetimepicker">
                                <span class="input-group-text">
                                    <i class="fa fa-calendar"></i>
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Description</label>
                        <textarea id="txtDescription" rows="3" class="form-control"></textarea>
                    </div>
                    <div class="form-group">
                        <label>Theme Color</label>
                        <select id="ddThemeColor" class="form-control">
                            <option value="">Default</option>
                            <option value="red">Red</option>
                            <option value="blue">Blue</option>
                            <option value="black">Black</option>
                            <option value="green">Green</option>
                        </select>
                    </div>
                    <!-- Chọn người dùng -->
                    @* <div class="form-group" id="userSelectContainer" style="display:none;">
                    <label for="userSelect">Select User</label>
                    <select id="userSelect" name="userId" style="width: 100%;">
                    <!-- Options sẽ được điền vào từ API hoặc database -->
                    </select>
                    </div> *@

                    <!-- Chọn nhóm -->
                    <div class="form-group" id="groupSelectContainer" style="display:none;">
                        <label for="groupSelect">Choose Group:</label>
                        <select id="groupSelect" name="groupId">
                            <!-- Các nhóm sẽ được thêm vào đây thông qua JavaScript -->
                        </select>
                    </div>

                    <button id="btnSave" class="btn btn-success">Save</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
    /* Đảm bảo chiều cao modal không vượt quá 60vh */
    #myModalSave .modal-dialog {
        max-height: 90vh; /* Cài đặt chiều cao tối đa cho modal */
        overflow-y: auto; /* Cho phép cuộn dọc nếu nội dung vượt quá */
    }

    /* Thiết lập phần thân modal có thể cuộn */
    #myModalSave .modal-body {
        max-height: 80vh; /* Cài đặt chiều cao tối đa cho thân modal */
        overflow-y: auto; /* Cho phép cuộn dọc nếu nội dung dài */
    }
</style>


<link href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.min.css" rel="stylesheet" />
<link href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.print.css" rel="stylesheet" media="print" />
@* <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/css/bootstrap-datetimepicker.min.css" rel="stylesheet" /> *@

<link href="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/css/select2.min.css" rel="stylesheet" />


<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tempusdominus-bootstrap-4/5.39.0/css/tempusdominus-bootstrap-4.min.css">

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.min.js"></script>
    @* <script src="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/js/select2.min.js"></script> *@
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/js/bootstrap-datetimepicker.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/tempusdominus-bootstrap-4/5.39.0/js/tempusdominus-bootstrap-4.min.js"></script>

    <script>
        $(document).ready(function () {

            

            // Gọi API để lấy danh sách nhóm
            $.ajax({
                url: '/api/dropdown/groupInCompanies',
                method: 'GET',
                success: function (response) {
                    console.log(response);  // Xử lý kết quả trả về
                    console.log(response.$values);  // Xử lý kết quả trả về
                    // Giả sử bạn có một dropdown hoặc list để hiển thị nhóm
                    var groupSelect = $('#groupSelect');
                    groupSelect.empty();  // Xóa các tùy chọn cũ
                    groupSelect.append('<option value="">Select a Group</option>'); // Thêm một option mặc định

                    // Duyệt qua danh sách nhóm và thêm vào dropdown
                    response.$values.forEach(function (group) {
                        groupSelect.append('<option value="' + group.groupId + '">' + group.groupName + '</option>');
                    });
                    // groupSelect.select2(); // Khởi tạo Select2
                }
            });

            // Hiển thị các dropdown nếu là Admin hoặc Manager
            $.ajax({
                url: '/event/getUserInfo',  // Đường dẫn API bạn đã tạo
                method: 'GET',
                success: function (response) {
                    const userId = response.userId;
                    const role = response.role;
                    console.log('User ID:', userId);
                    console.log('Role:', role);

                    // Tùy theo vai trò, bạn có thể thay đổi giao diện người dùng
                    if(role === 'Admin' || role === 'Manager') {
                        $('#userSelectContainer').show();  // Hiển thị chọn người dùng
                        $('#groupSelectContainer').show();  // Hiển thị chọn nhóm
                    } else {
                        $('#userSelectContainer').hide();  // Ẩn chọn người dùng
                        $('#groupSelectContainer').hide();  // Ẩn chọn nhóm
                    }
                },
                error: function (error) {
                    console.log('Error:', error);
                }
            });



            var events = [];
            var selectedEvent = null;
            FetchEventAndRenderCalendar();

            function FetchEventAndRenderCalendar() {
                events = [];
                $.ajax({
                    type: "GET",
                    url: "/event/GetEvents",
                    success: function (data) {
                        console.log(data);

                        $.each(data.$values, function (i, v) {
                            events.push({
                                eventID: v.eventId,
                                title: v.subject,
                                description: v.description,
                                start: moment(v.start),
                                end: v.end != null ? moment(v.end) : null,
                                color: v.themeColor,
                                allDay: v.isFullDay,
                                groupID: v.groupId
                            });
                        })
                        console.log(events);
                        GenerateCalender(events);
                    },
                    error: function (error) {
                        alert('failed');
                    }
                })
            }

            function GenerateCalender(events) {
                $('#calender').fullCalendar('destroy');
                $('#calender').fullCalendar({
                    contentHeight: 505,
                    defaultDate: new Date(),
                    timeFormat: 'h(:mm)a',
                    initialView: 'dayGridMonth', // Dạng xem mặc định
                    header: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'month,basicWeek,basicDay,agenda'
                    },
                    eventLimit: true,
                    eventColor: '#378006',
                    events: events,
                    eventClick: function (calEvent, jsEvent, view) {
                        selectedEvent = calEvent;
                        $('#myModal #eventTitle').text(calEvent.title);
                        var $description = $('<div/>');
                        $description.append($('<p/>').html('<b>Start:</b>' + calEvent.start.format("DD-MMM-YYYY HH:mm A")));
                        if (calEvent.end != null) {
                            $description.append($('<p/>').html('<b>End:</b>' + calEvent.end.format("DD-MMM-YYYY HH:mm A")));
                        }
                        $description.append($('<p/>').html('<b>Description:</b>' + calEvent.description));
                        $('#myModal #pDetails').empty().html($description);

                        $('#myModal').modal();
                    },
                    selectable: true,
                    select: function (start, end) {
                        selectedEvent = {
                            eventID: 0,
                            title: '',
                            description: '',
                            start: start,
                            end: end,
                            allDay: false,
                            color: '',
                            groupID: null
                        };
                        openAddEditForm();
                        $('#calendar').fullCalendar('unselect');
                    },
                    editable: true,
                    eventDrop: function (event) {
                        var data = {
                            EventId: event.eventID,
                            Subject: event.title,
                            Start: event.start.format('DD/MM/YYYY HH:mm A'),
                            End: event.end != null ? event.end.format('DD/MM/YYYY HH:mm A') : null,
                            Description: event.description,
                            ThemeColor: event.color,
                            IsFullDay: event.allDay,
                            GroupId: event.groupID
                        };
                        SaveEvent(data);
                    }
                })
            }
            $('#dtp1, #dtp2').datetimepicker({
                format: 'DD/MM/YYYY HH:mm A',
                icons: {
                    time: 'fa fa-clock',
                    date: 'fa fa-calendar',
                    up: 'fa fa-chevron-up',
                    down: 'fa fa-chevron-down',
                    previous: 'fa fa-chevron-left',
                    next: 'fa fa-chevron-right',
                    today: 'fa fa-calendar-check',
                    clear: 'fa fa-trash',
                    close: 'fa fa-times'
                }
            });
            $('#dtp1').on('change.datetimepicker', function (e) {
                // Lấy giá trị đã chọn
                var selectedDate = e.date.format('DD/MM/YYYY HH:mm A');
                console.log("Ngày giờ được chọn: ", selectedDate);

                // Gán giá trị vào input
                $('#txtStart').val(selectedDate);
            });
            $('#dtp2').on('change.datetimepicker', function (e) {
                // Lấy giá trị đã chọn
                var selectedDate = e.date.format('DD/MM/YYYY HH:mm A');
                console.log("Ngày giờ được chọn: ", selectedDate);

                // Gán giá trị vào input
                $('#txtEnd').val(selectedDate);
            });
            $('#btnEdit').click(function () {
                //Open modal dialog for edit event
                openAddEditForm();
            })
            $('#btnDelete').click(function () {
                if (selectedEvent != null && confirm('Are you sure?')) {
                    $.ajax({
                        type: "POST",
                        url: '/event/DeleteEvent',
                        data: { 'id': selectedEvent.eventID },
                        success: function (data) {
                            if (data.status) {
                                FetchEventAndRenderCalendar();
                                $('#myModal').modal('hide');
                            }
                        },
                        error: function () {
                            alert('Failed');
                        }
                    })
                }
            })
            $('#dtp1,#dtp2').datetimepicker({
                format: 'DD/MM/YYYY HH:mm A'
            });
            $('#chkIsFullDay').change(function () {
                if ($(this).is(':checked')) {
                    $('#divEndDate').hide();
                }
                else {
                    $('#divEndDate').show();
                }
            });
            function openAddEditForm() {
                if (selectedEvent != null) {
                    $('#hdEventID').val(selectedEvent.eventID);
                    $('#txtSubject').val(selectedEvent.title);
                    $('#txtStart').val(selectedEvent.start.format('DD/MM/YYYY HH:mm A'));
                    $('#chkIsFullDay').prop("checked", selectedEvent.allDay || false);
                    $('#chkIsFullDay').change();
                    $('#txtEnd').val(selectedEvent.end != null ? selectedEvent.end.format('DD/MM/YYYY HH:mm A') : '');
                    $('#txtDescription').val(selectedEvent.description);
                    $('#ddThemeColor').val(selectedEvent.color);
                    $('#groupSelect').val(selectedEvent.groupID);
                }
                $('#myModal').modal('hide');
                $('#myModalSave').modal();
            }
            $('#btnSave').click(function () {
                //Validation/
                if ($('#txtSubject').val().trim() == "") {
                    alert('Subject required');
                    return;
                }
                if ($('#txtStart').val().trim() == "") {
                    alert('Start date required');
                    return;
                }
                if ($('#chkIsFullDay').is(':checked') == false && $('#txtEnd').val().trim() == "") {
                    alert('End date required');
                    return;
                }
                else {
                    var startDate = moment($('#txtStart').val(), "DD/MM/YYYY HH:mm A").toDate();
                    var endDate = moment($('#txtEnd').val(), "DD/MM/YYYY HH:mm A").toDate();
                    if (startDate > endDate) {
                        alert('Invalid end date');
                        return;
                    }
                }
                var enddate = startDate + 1;
                console.log(enddate);
                var data = {
                    EventId: $('#hdEventID').val(),
                    Subject: $('#txtSubject').val().trim(),
                    Start: $('#txtStart').val().trim(),
                    End: $('#chkIsFullDay').is(':checked') ? null : $('#txtEnd').val().trim(),
                    Description: $('#txtDescription').val(),
                    ThemeColor: $('#ddThemeColor').val(),
                    IsFullDay: $('#chkIsFullDay').is(':checked'),
                    GroupId: $('#groupSelect').val() || null
                }
                // call function for submit data to the server
                SaveEvent(data);
            })
            function SaveEvent(data) {
                $.ajax({
                    type: "POST",
                    url: '/event/SaveEvent',
                    data: data,
                    success: function (data) {
                        if (data.status) {
                            //Refresh the calender
                            FetchEventAndRenderCalendar();
                            $('#myModalSave').modal('hide');
                            alert('Lưu sự kiện thành công');
                        }
                    },
                    error: function () {
                        alert('Failed');
                    }
                })
            }
        })
    </script>
}